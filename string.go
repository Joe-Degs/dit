// Code generated by "stringer -type=Opcode,ErrorCode -output=string.go"; DO NOT EDIT.

package dit

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[Rrq-1]
	_ = x[Wrq-2]
	_ = x[Data-3]
	_ = x[Ack-4]
	_ = x[Error-5]
}

const _Opcode_name = "RrqWrqDataAckError"

var _Opcode_index = [...]uint8{0, 3, 6, 10, 13, 18}

func (i Opcode) String() string {
	i -= 1
	if i >= Opcode(len(_Opcode_index)-1) {
		return "Opcode(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _Opcode_name[_Opcode_index[i]:_Opcode_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[NotDefined-0]
	_ = x[FileNotFound-1]
	_ = x[AccessViolation-2]
	_ = x[DiskFull-3]
	_ = x[IllegalOperation-4]
	_ = x[UnknownTID-5]
	_ = x[FileAlreadyExists-6]
	_ = x[NoSuchUser-7]
}

const _ErrorCode_name = "NotDefinedFileNotFoundAccessViolationDiskFullIllegalOperationUnknownTIDFileAlreadyExistsNoSuchUser"

var _ErrorCode_index = [...]uint8{0, 10, 22, 37, 45, 61, 71, 88, 98}

func (i ErrorCode) String() string {
	if i >= ErrorCode(len(_ErrorCode_index)-1) {
		return "ErrorCode(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _ErrorCode_name[_ErrorCode_index[i]:_ErrorCode_index[i+1]]
}
